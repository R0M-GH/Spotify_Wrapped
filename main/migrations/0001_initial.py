# Generated by Django 5.1.2 on 2024-12-01 01:24

import datetime
import main.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Wraps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('term', models.CharField(blank=True, max_length=15, null=True)),
                ('spotify_display_name', models.CharField(default='', max_length=255)),
                ('creation_date', models.DateTimeField(default=datetime.datetime.now)),
                ('wrap_json', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=datetime.datetime(2024, 11, 30, 17, 24, 20, 447922))),
                ('birthday', models.DateField(default=datetime.datetime(2024, 11, 30, 17, 24, 20, 447922))),
                ('spotify_access_token', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('spotify_refresh_token', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('current_display_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', main.models.CustomUserManager()),
            ],
        ),
    ]
